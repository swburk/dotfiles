filetype plugin indent on
packadd! matchit
packadd! comment

let s:viminfodir = expand("$XDG_CACHE_HOME") . "vim"
if !isdirectory(s:viminfodir)
	call mkdir(s:viminfodir, "p", 0700)
endif
let &viminfofile=s:viminfodir .. "/viminfo"

let s:undodir = expand("$XDG_STATE_HOME") . "vim/undo"
if !isdirectory(s:undodir)
	call mkdir(s:undodir, "p", 0700)
endif
let &undodir=s:undodir

set encoding=utf-8
set noswapfile
set hidden
set undofile
set backspace=indent,eol,start
set ttimeoutlen=10
set nowrap
set incsearch
set hlsearch
set ignorecase
set smartcase
set tabstop=4
set shiftwidth=0
set shiftround
set autoindent
set showcmd
set ruler
set number
set laststatus=2
set wildmenu
syntax enable

set pastetoggle=<f2>
nnoremap <silent> <Plug>(SplitLine)
	\ :keeppatterns substitute/\v^(\s*)(.{-})\s*%#\s*(.*)/\1\2\r\1\3/<bar>
	\call repeat#set("\<Plug>(SplitLine)")<cr>
nmap S <Plug>(SplitLine)
nnoremap <tab> <cmd>buffer #<cr>
nnoremap <silent> <c-l> <cmd>nohlsearch<cr>
nnoremap gV `[v`]
nnoremap gs :%substitute///g<left><left>
xnoremap gs :substitute///g<left><left>
nnoremap gl <cmd>buffers<cr>:buffer<space>
nnoremap gm <cmd>global//number<cr>:
cnoremap %% <c-r>=fnameescape(expand('%:h')).'/'<cr>

autocmd FileType * setlocal formatoptions=cqj
